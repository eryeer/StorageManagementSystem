<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="	http://www.springframework.org/schema/beans 
       						http://www.springframework.org/schema/beans/spring-beans.xsd
       						http://www.springframework.org/schema/context 
       						http://www.springframework.org/schema/context/spring-context.xsd
       						http://www.springframework.org/schema/aop 
       						http://www.springframework.org/schema/aop/spring-aop.xsd
       						http://www.springframework.org/schema/tx 
       						http://www.springframework.org/schema/tx/spring-tx.xsd
       						http://www.springframework.org/schema/cache
                            http://www.springframework.org/schema/cache/spring-cache.xsd">
	<!-- hibernate & db config -->
	<context:property-placeholder location="classpath:db.properties" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.isolation">4</prop>
			</props>
		</property>
		<property name="mappingLocations" value="classpath:com/storage/domain/*.hbm.xml"></property>
	</bean>
	
	<!-- transaction config -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" read-only="false"/>
			<tx:method name="update*" read-only="false"/>
			<tx:method name="delete*" read-only="false"/>
			<tx:method name="find*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="bean(*Service)"/>
	</aop:config>
	<bean id="genericDao" class="com.storage.dao.impl.GenericDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- UserInfo~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<bean id="userInfoService" class="com.storage.service.impl.UserInfoServiceIml">
		<property name="dao" ref="genericDao"></property>
	</bean>
	<bean id="userInfoAction" class="com.storage.web.action.UserInfoAction" scope="prototype">
		<property name="service" ref="userInfoService"></property>
	</bean>
	<!-- Store~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<bean id="storeService" class="com.storage.service.impl.StoreServiceImpl">
		<property name="dao" ref="genericDao"></property>
	</bean>
	<bean id="storeAction" class="com.storage.web.action.StoreAction" scope="prototype">
		<property name="service" ref="storeService"></property>
	</bean>
</beans>
